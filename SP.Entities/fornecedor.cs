//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SP.Entities
{
    public partial class fornecedor
    {
        #region Primitive Properties
    
        public virtual string cnpj
        {
            get;
            set;
        }
    
        public virtual string endereco
        {
            get;
            set;
        }
    
        public virtual string cep
        {
            get;
            set;
        }
    
        public virtual Nullable<int> num
        {
            get;
            set;
        }
    
        public virtual string foneCelular
        {
            get;
            set;
        }
    
        public virtual string foneComercial
        {
            get;
            set;
        }
    
        public virtual string foneResidencial
        {
            get;
            set;
        }
    
        public virtual string nome
        {
            get;
            set;
        }
    
        public virtual string ie
        {
            get;
            set;
        }
    
        public virtual string rg
        {
            get;
            set;
        }
    
        public virtual int Fornecedor_ID
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<compra> compra
        {
            get
            {
                if (_compra == null)
                {
                    var newCollection = new FixupCollection<compra>();
                    newCollection.CollectionChanged += Fixupcompra;
                    _compra = newCollection;
                }
                return _compra;
            }
            set
            {
                if (!ReferenceEquals(_compra, value))
                {
                    var previousValue = _compra as FixupCollection<compra>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupcompra;
                    }
                    _compra = value;
                    var newValue = value as FixupCollection<compra>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupcompra;
                    }
                }
            }
        }
        private ICollection<compra> _compra;
    
        public virtual ICollection<produto> produto
        {
            get
            {
                if (_produto == null)
                {
                    var newCollection = new FixupCollection<produto>();
                    newCollection.CollectionChanged += Fixupproduto;
                    _produto = newCollection;
                }
                return _produto;
            }
            set
            {
                if (!ReferenceEquals(_produto, value))
                {
                    var previousValue = _produto as FixupCollection<produto>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupproduto;
                    }
                    _produto = value;
                    var newValue = value as FixupCollection<produto>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupproduto;
                    }
                }
            }
        }
        private ICollection<produto> _produto;

        #endregion
        #region Association Fixup
    
        private void Fixupcompra(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (compra item in e.NewItems)
                {
                    item.fornecedor = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (compra item in e.OldItems)
                {
                    if (ReferenceEquals(item.fornecedor, this))
                    {
                        item.fornecedor = null;
                    }
                }
            }
        }
    
        private void Fixupproduto(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (produto item in e.NewItems)
                {
                    item.fornecedor = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (produto item in e.OldItems)
                {
                    if (ReferenceEquals(item.fornecedor, this))
                    {
                        item.fornecedor = null;
                    }
                }
            }
        }

        #endregion
    }
}
