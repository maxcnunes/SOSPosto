//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SP.Entities
{
    public partial class produto
    {
        #region Primitive Properties
    
        public virtual string descricao
        {
            get;
            set;
        }
    
        public virtual string un
        {
            get;
            set;
        }
    
        public virtual string unSecundaria
        {
            get;
            set;
        }
    
        public virtual decimal valor
        {
            get;
            set;
        }
    
        public virtual string nome
        {
            get;
            set;
        }
    
        public virtual string tipo
        {
            get;
            set;
        }
    
        public virtual int Produto_ID
        {
            get;
            set;
        }
    
        public virtual int Fornecedor_ID
        {
            get { return _fornecedor_ID; }
            set
            {
                if (_fornecedor_ID != value)
                {
                    if (fornecedor != null && fornecedor.Fornecedor_ID != value)
                    {
                        fornecedor = null;
                    }
                    _fornecedor_ID = value;
                }
            }
        }
        private int _fornecedor_ID;

        #endregion
        #region Navigation Properties
    
        public virtual fornecedor fornecedor
        {
            get { return _fornecedor; }
            set
            {
                if (!ReferenceEquals(_fornecedor, value))
                {
                    var previousValue = _fornecedor;
                    _fornecedor = value;
                    Fixupfornecedor(previousValue);
                }
            }
        }
        private fornecedor _fornecedor;
    
        public virtual ICollection<itemcompra> itemcompra
        {
            get
            {
                if (_itemcompra == null)
                {
                    var newCollection = new FixupCollection<itemcompra>();
                    newCollection.CollectionChanged += Fixupitemcompra;
                    _itemcompra = newCollection;
                }
                return _itemcompra;
            }
            set
            {
                if (!ReferenceEquals(_itemcompra, value))
                {
                    var previousValue = _itemcompra as FixupCollection<itemcompra>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupitemcompra;
                    }
                    _itemcompra = value;
                    var newValue = value as FixupCollection<itemcompra>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupitemcompra;
                    }
                }
            }
        }
        private ICollection<itemcompra> _itemcompra;
    
        public virtual ICollection<itemvenda> itemvenda
        {
            get
            {
                if (_itemvenda == null)
                {
                    var newCollection = new FixupCollection<itemvenda>();
                    newCollection.CollectionChanged += Fixupitemvenda;
                    _itemvenda = newCollection;
                }
                return _itemvenda;
            }
            set
            {
                if (!ReferenceEquals(_itemvenda, value))
                {
                    var previousValue = _itemvenda as FixupCollection<itemvenda>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupitemvenda;
                    }
                    _itemvenda = value;
                    var newValue = value as FixupCollection<itemvenda>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupitemvenda;
                    }
                }
            }
        }
        private ICollection<itemvenda> _itemvenda;

        #endregion
        #region Association Fixup
    
        private void Fixupfornecedor(fornecedor previousValue)
        {
            if (previousValue != null && previousValue.produto.Contains(this))
            {
                previousValue.produto.Remove(this);
            }
    
            if (fornecedor != null)
            {
                if (!fornecedor.produto.Contains(this))
                {
                    fornecedor.produto.Add(this);
                }
                if (Fornecedor_ID != fornecedor.Fornecedor_ID)
                {
                    Fornecedor_ID = fornecedor.Fornecedor_ID;
                }
            }
        }
    
        private void Fixupitemcompra(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (itemcompra item in e.NewItems)
                {
                    item.produto = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (itemcompra item in e.OldItems)
                {
                    if (ReferenceEquals(item.produto, this))
                    {
                        item.produto = null;
                    }
                }
            }
        }
    
        private void Fixupitemvenda(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (itemvenda item in e.NewItems)
                {
                    item.produto = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (itemvenda item in e.OldItems)
                {
                    if (ReferenceEquals(item.produto, this))
                    {
                        item.produto = null;
                    }
                }
            }
        }

        #endregion
    }
}
